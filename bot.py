import os
import requests
from datetime import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, filters, ContextTypes

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
EXPRESS_PAY_TOKEN = os.getenv("EXPRESS_PAY_TOKEN")
BOT_TOKEN = os.getenv("BOT_TOKEN")
APP_URL = os.getenv("APP_URL")  # URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Render
API_URL = "https://api.express-pay.by/v1/invoices"
ACCOUNT_FILE = "account_no.txt"


# === –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ ===
def main_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üí∞ –í—ã—Å—Ç–∞–≤–∏—Ç—å —Å—á—ë—Ç", callback_data="create_invoice")],
        [InlineKeyboardButton("üìä –°—Ç–∞—Ç—É—Å —Å—á—ë—Ç–∞", callback_data="check_status")]
    ])


# === –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è AccountNo ===
def get_next_account_no():
    """–ß–∏—Ç–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–π –Ω–æ–º–µ—Ä —Å—á—ë—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –Ω–∞ 1"""
    today = datetime.now().strftime("%d%m%y")

    # –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —á–∏—Ç–∞–µ–º
    if os.path.exists(ACCOUNT_FILE):
        with open(ACCOUNT_FILE, "r") as f:
            data = f.read().strip()
    else:
        data = ""

    # –µ—Å–ª–∏ –¥–∞—Ç–∞ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º —Å 001
    if not data.startswith(today):
        next_no = 1
    else:
        last_no = int(data[6:])  # –±–µ—Ä—ë–º —á–∞—Å—Ç—å –ø–æ—Å–ª–µ –¥–∞—Ç—ã
        next_no = last_no + 1

    new_account_no = f"{today}{next_no:03d}"

    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä –≤ —Ñ–∞–π–ª
    with open(ACCOUNT_FILE, "w") as f:
        f.write(new_account_no)

    return new_account_no


# === –ö–æ–º–∞–Ω–¥–∞ /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu()
    )


# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–Ω–æ–ø–æ–∫ ===
async def button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "create_invoice":
        await query.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—á—ë—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 25,50):")
        context.user_data["action"] = "create_invoice"
    elif query.data == "chec
